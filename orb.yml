version: 2.1
description: |
  Run your Cypress.io end-to-end browser tests without spending time configuring CircleCI.
  This orb can also record results on the Cypress Dashboard and load balance tests in parallel mode.
  If recording on the dashboard, set `CYPRESS_RECORD_KEY` as CI environment variable.

#
# See https://www.cypress.io/
#
# User workflows can use "Jobs" defined in this Orb
# Jobs can use "Commands" also defined in this Orb
# Commands run on "Executors" defined below to guarantee consistent environment
# with all dependencies installed correctly.

#
# environments (containers) for running jobs and commands
#
executors:
  default:
    description: Single Docker container with Cypress dependencies
    parameters:
      node:
        type: string
        default: "10"
        description: Version of Node 6/8/10 to use
    docker:
      - image: cypress/base:<< parameters.node >>

#
# reusable commands
#
commands:
  hello:
    description: just a tiny command for checking if things work
    parameters:
      greeting:
        type: string
    steps:
      - run: echo "Cypress says, Hello <<parameters.greeting>>"

  #
  # individual "building blocks" commands
  #
  setup:
    steps:
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "package.json" }}
      # it would be nice to vary this command based on presence of "package-lock.json"
      # and also allow using yarn or pnpm
      - run:
          name: "Npm CI"
          command: "npm ci"
      - run: npx cypress verify
      # save new cache folder if needed
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

  build:
    parameters:
      build:
        type: string
        description: Custom build command to run after install
    steps:
      - run: << parameters.build >>

  write_workspace:
    steps:
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .cache/Cypress

  #
  # public user commands
  #
  install:
    description: Install NPM dependencies using "npm ci"
    steps:
      - setup
      - write_workspace

  install_and_build:
    description: Install NPM dependencies using "npm ci" then runs your build command
    parameters:
      build:
        type: string
        description: Custom build command to run after install
    steps:
      - setup
      # I could not find a way to run conditional step inside a command,
      # so had to do separate command
      - build:
          build: << parameters.build >>
      - write_workspace
      # - when:
      #     condition: << parameters.build >>
      #       "<< parameters.build >>"

  e2e:
    description: Runs Cypress end-to-end tests
    parameters:
      record:
        type: boolean
        default: false
        description: Record results on Cypress Dashboard, see https://on.cypress.io/dashboard-service
      parallel:
        type: boolean
        default: false
        description: Test balancing using Cypress Dashboard, see https://on.cypress.io/parallelization
      group:
        type: string
        description: Give tests a group name for clarity
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run Cypress tests
          # GOOD EXAMPLE conditional text based on boolean parameter
          command: "npx cypress run <<# parameters.record >> --record --group '<<parameters.group>>' <</ parameters.record >> <<# parameters.parallel >> --parallel <</ parameters.parallel >>"

# utility template for making many parallel jobs (see below like "parallel-2x")
.parallel_template: &parallel
  description: |
    Load balances tests on two machines. Needs to record to Cypress Dashboard.
    See usage examples below, but in general user needs
    to run install command and THEN parallel-x command
  parameters:
    group:
      type: string
      default: "default group"
      description: Test group name when recording on the dashboard
  executor: default
  steps:
    - e2e:
        record: true
        parallel: true
        group: <<parameters.group>>

#
# jobs defined by the orb
#
jobs:
  hello:
    description: Dummy job for testing commands
    executor: default
    steps:
      - hello:
          greeting: "friend"

  # a single e2e test run that
  #   - checks out code
  #   - installs NPM dependencies
  #   - executes Cypress end-to-end tests
  #     * (optional) with Dashboard recording
  #     * (optional) in parallel mode (requires recording)
  #     * (optional) with named group on Dashboard (requires recording)
  run:
    description:
      A single complete job to run Cypress end-to-end tests in your project.
      If recording on the Dashboard, set CYPRESS_RECORD_KEY environment variable

    parameters:
      record:
        type: boolean
        default: false
        description: Record results on Cypress Dashboard, see https://on.cypress.io/dashboard-service

      # "parallel" parameter should be used with "parallelism" parameter
      parallel:
        type: boolean
        default: false
        description: Test balancing using Cypress Dashboard, see https://on.cypress.io/parallelization

      # parallelism:
      #   type: string
      #   default: "1"
      #   description: Number of Circle machines to use for load balancing (requires "parallel" parameter set to true)
      group:
        type: string
        default: "default group"
        description: Test group name when recording on the dashboard

    executor: default
    # cannot pass parallelism via a parameter yet
    # see https://github.com/CircleCI-Public/config-preview-sdk/issues/121
    # parallelism: <<parameters.parallelism>>
    steps:
      - checkout
      - install
      - e2e:
          record: <<parameters.record>>
          parallel: <<parameters.parallel>>
          group: <<parameters.group>>

  install:
    parameters:
      build:
        type: string
        default: ""
        description: Custom build command to run after install
    description: Checks out code, installs dependencies, attaches code to the workspace
    executor: default
    steps:
      - checkout
      - when:
          condition: << parameters.build >>
          steps:
            - install_and_build:
                build: << parameters.build >>
      - unless:
          condition: << parameters.build >>
          steps:
            - install:

  # since we cannot pass parallelism as a parameter
  # we can just have multiple commands for now.
  run-1x:
    parallelism: 1
    <<: *parallel
  run-2x:
    parallelism: 2
    <<: *parallel
  run-3x:
    parallelism: 3
    <<: *parallel
  run-4x:
    parallelism: 4
    <<: *parallel
  run-5x:
    parallelism: 5
    <<: *parallel
  run-6x:
    parallelism: 6
    <<: *parallel
  run-7x:
    parallelism: 7
    <<: *parallel
  run-8x:
    parallelism: 8
    <<: *parallel
  run-9x:
    parallelism: 9
    <<: *parallel
  run-10x:
    parallelism: 10
    <<: *parallel

#
# user examples showing how to use the above Cypress Orb
#
examples:
  simple:
    description: Runs all Cypress tests without recording results on the Dashboard
    usage:
      version: 2.1
      orbs:
        cypress: cypress/cypress@dev:0.0.1
      workflows:
        build:
          jobs:
            - cypress/run

  recording:
    description: Runs all Cypress tests and records them on the Cypress Dashboard
    usage:
      version: 2.1
      orbs:
        cypress: cypress/cypress@dev:0.0.1
      workflows:
        build:
          jobs:
            - cypress/run:
                record: true

  parallel-on-2-machines:
    description: Runs all Cypress tests by load balancing them on two machines
    usage:
      version: 2.1
      orbs:
        cypress: cypress/cypress@dev:0.0.1
      workflows:
        build:
          jobs:
            - cypress/run
            - cypress/parallel-2x:
                requires:
                  - cypress/install
                group: "2 machines"

  build-app:
    description: |
      Install dependencies and run custom build command on one machine.
      Then run on 3 machines tests in load balancing mode.
    usage:
      version: 2.1
      orbs:
        cypress: cypress/cypress@dev:0.0.1
      workflows:
        build:
          jobs:
            - cypress/install:
                # custom build command
                build: "npm run build"
            - cypress/run-3x:
                requires:
                  - cypress/install
                group: "3x"
